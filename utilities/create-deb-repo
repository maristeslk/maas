#!/bin/bash -e

# Uses the output of the 'release-build' script to create Debian packages.
# Also signs the packages, scans them, and prepares an archive that can be
# hosted with HTTP.

ROOTDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
cd "$ROOTDIR"
BUILDDIR=$ROOTDIR/build_pkg
if [ ! -d $BUILDDIR ]; then
    echo "[!] You must run the 'release-build' script first."
fi
PBUILDFOLDER=${PBUILDFOLDER:-$HOME/pbuilder}

usage () {
    DISTRO_ARGS=$(distro-info --supported | sed 's/^/[--/g' | sed 's/$/]/' | tr '\n' ' ')
    echo "Usage:"
    echo "    $0 $DISTRO_ARGS"
    exit 1
}

DEFAULT_DISTROS="$(ubuntu-distro-info --supported)"
PACKAGE_DISTROS=""

for arg in "$@"; do
    if [ "$arg" = "-h" -o "$arg" = "--help" ]; then
        usage
    fi
    if echo "$arg" | grep -q "^--"; then
        distro="$(echo "$arg" | sed 's/^--//')"
        if echo $DEFAULT_DISTROS | grep -q $distro; then
            PACKAGE_DISTROS="$PACKAGE_DISTROS $distro"
        fi
        shift
    fi
done

if [ "$PACKAGE_DISTROS" = "" ]; then
    PACKAGE_DISTROS="$DEFAULT_DISTROS"
fi

scan_packages () {
    # Create a repository that can be hosted with HTTP. Based loosely on:
    #     https://help.ubuntu.com/community/CreateAuthenticatedRepository
    cd $PBUILDFOLDER/$1_result
    echo ""
    echo "MAAS versions in distribution '$1':"
    ls -1 *.deb | cut -f2 -d_ | sort -u | sed 's/^/    /g'
    echo ""
    echo ""
    dpkg-sig --sign builder *.deb
    mkdir -p ../archive/dists/$1/main/binary-amd64
    cp -fl *.deb ../archive/dists/$1/main/binary-amd64
    cd ../archive
    dpkg-scanpackages -m dists/$1/main/binary-amd64 | tee dists/$1/main/binary-amd64/Packages
    cat dists/$1/main/binary-amd64/Packages | gzip --fast > dists/$1/main/binary-amd64/Packages.gz
    apt-ftparchive release dists/$1 | tee dists/$1/Release
    rm -f dists/$1/InRelease
    gpg --digest-algo sha512 --clearsign -o dists/$1/InRelease dists/$1/Release
    rm -f dists/$1/Release.gpg
    gpg --digest-algo sha512 -abs -o dists/$1/Release.gpg dists/$1/Release
}

distro=bionic
if echo "$PACKAGE_DISTROS" | grep -q "$distro"; then
    version=18.04
    cd $BUILDDIR
    pbuilder-dist $distro build $(ls -1rt *.dsc | grep "~$version" | tail -1)
    scan_packages $distro
fi

cd $PBUILDFOLDER/archive
echo ""
echo "Public signing key (use with 'apt-key add'):"
gpg --armor --export "$DEBEMAIL" | tee pubkey

echo ""
echo "You should be able to use the result as a repository by running:"
echo "    cd $PBUILDFOLDER/archive && python3 -m http.server"
echo ""
echo "Then adding [one of] the following to the target machine's apt sources:"
for ip in $(ip r | grep -o 'src.*' | awk '{ print $2}'); do
    echo "    deb http://$ip:8000/ <distro> main"
done
echo ""
echo "... and adding the key as follows:"
echo "    curl http://<repository-ip>:8000/pubkey | apt-key add -"
