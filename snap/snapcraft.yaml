name: agora-maas
adopt-info: agora-maas
summary: Metal as a Service
description: |
  Total automation of your physical servers for amazing data center operational efficiency.
grade: stable
confinement: strict
base: core20
assumes:
  - snapd2.41
system-usernames:
  snap_daemon: shared
# epochs:
# 0: (2.5) PostgreSQL 9.5
# 1: (2.6) PostgreSQL 10
# 2: (2.8) move MAAS data to $SNAP_COMMON
# 3: (2.9) drop "all" mode and builtin PostgresSQL server
epoch: 3*

plugs:
  maas-cli:
    interface: content
    content: maas-cli
    target: $SNAP/maas-cli/lib
    default-provider: maas-cli
  test-db-socket:
    interface: content
    content: db-socket
    target: $SNAP_COMMON/test-db-socket
apps:
  supervisor:
    daemon: simple
    command: bin/run-supervisord
    environment:
      PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8/dist-packages
      LD_PRELOAD: $SNAP/usr/lib/stub_initgroups.so
    plugs:
        - avahi-observe # network discovery
        - hardware-observe
        - kernel-module-observe
        - mount-observe
        - network
        - network-bind
        - network-control
        - network-observe
        - system-observe
        - time-control # chrony
  maas:
    command: bin/ld-preload $SNAP/bin/maas
    environment:
      PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8/dist-packages
    plugs:
        - home
        - mount-observe  # to read /proc/*/mounts
        - network # for external authentication
        - network-observe # to get default URL

  power:
    command: bin/maas-power
    environment:
      PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8/dist-packages
    plugs:
        - network

parts:
  agora-maas:
    plugin: python
    source: .
    build-environment:
      - PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8/dist-packages
    requirements:
      - snap/local/requirements.txt
    build-packages:
      - build-essential
      - git
      - libffi-dev
      - libpq-dev
      - libxml2-dev
      - libxslt1-dev
      - python3-setuptools
    stage-packages:
      - amtterm # AMT
      - archdetect-deb
      - avahi-utils
      - bind9
      - chrony
      - dns-root-data # for bind9
      - freeipmi-tools # IPMI
      - gpgv
      - ipmitool # Moonshot
      - iproute2
      - isc-dhcp-client
      - isc-dhcp-server
      - libatm1
      - libpq5
      - libsoap-lite-perl # Dependencies for AMT
      - libvirt-clients # Virsh
      - libxml-parser-lite-perl # Dependencies for AMT
      - libxml-parser-perl # Dependencies for AMT
      - libxtables12
      - lshw
      - nginx-core
      - openssh-client
      - python3-attr
      - python3-bson
      - python3-certifi # for macaroonbakery
      - python3-cffi # for macaroonbakery
      - python3-cffi-backend # for macaroonbakery
      - python3-chardet
      - python3-crochet
      - python3-cryptography
      - python3-curtin
      - python3-distro-info
      - python3-django
      - python3-django-piston3
      - python3-formencode
      - python3-httplib2
      - python3-idna # for macaroonbakery
      - python3-jsonschema
      - python3-lxml
      - python3-macaroonbakery
      - python3-markupsafe
      - python3-mimeparse
      - python3-nacl # for macaroonbakery
      - python3-netaddr
      - python3-netifaces
      - python3-oauthlib
      - python3-paramiko
      - python3-petname
      - python3-pexpect
      - python3-prometheus-client
      - python3-protobuf # for macaroonbakery
      - python3-psycopg2
      - python3-pypureomapi
      - python3-pylxd
      - python3-pymacaroons # for macaroonbakery
      - python3-pyparsing
      - python3-requests
      - python3-requests-toolbelt  # for pylxd
      - python3-requests-unixsocket  # for pylxd
      - python3-rfc3339 # for macaroonbakery
      - python3-seamicroclient
      - python3-simplejson
      - python3-simplestreams
      - python3-sphinx
      - python3-tempita
      - python3-twisted
      - python3-txtftp
      - python3-urllib3 # for macaroonbakery
      - python3-yaml
      - python3-zope.interface
      - rsyslog
      - snmp # APC
      - squid
      - tcpdump
      - ubuntu-keyring
      - util-linux
      - wget # DLI
      - wsmancli # AMT
    organize:
        lib/python3.*/site-packages/etc/*: etc
        lib/python3.*/site-packages/usr/bin/*: usr/bin
        lib/python3.*/site-packages/usr/lib/*: usr/lib
        lib/python3.*/site-packages/usr/sbin/*: usr/sbin
        lib/python3.*/site-packages/usr/share/*: usr/share
        usr/lib/curtin/helpers: usr/lib/python3/dist-packages/helpers
    filesets:
      remove:
        - -lib/python3.*/site-packages/etc
        - -lib/python3.*/site-packages/usr
        - -lib/python3/dist-packages/maastesting
        - -share
        - -usr/bin/xdg-*
        - -usr/share/applications
        - -usr/share/bug
        - -usr/share/debhelper
        - -usr/share/dh-python
        - -usr/share/doc
        - -usr/share/doc-base
        - -usr/share/lintian
        - -usr/share/man
        - -var/lib/ieee-data/mam.txt
        - -var/lib/ieee-data/oui36.txt
    stage:
      - $remove
    prime:
      - $remove
    override-build: |
      set -e
      snapcraftctl build
      # If python3-netaddr contains absolute symlinks.
      # See https://bugs.launchpad.net/snapcraft/+bug/1774410
      ln -s -f ../../../../../../var/lib/ieee-data/oui.txt $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages/netaddr/eui/oui.txt
      ln -s -f ../../../../../../var/lib/ieee-data/iab.txt $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages/netaddr/eui/iab.txt
    override-prime: |
      set -e
      cwd=$(pwd)
      cd $SNAPCRAFT_PART_SRC
      snapcraftctl set-version $($SNAPCRAFT_PART_SRC/utilities/package-version)
      cd $cwd
      snapcraftctl prime
      /usr/bin/python3 -m compileall -q .

  ui:
    plugin: npm
    source: src/maasui/src
    npm-node-version: "12.13.0"
    build-packages:
      - on amd64: []
      - else:
          # node-sass on non-amd64 needs python 2, see http://pad.lv/1867329
          - python
    override-build: |
      set -e
      snapcraftctl build
      PATH="$PATH:$SNAPCRAFT_PART_BUILD/node_modules/.bin:$SNAPCRAFT_PART_INSTALL/bin"
      NODE_ENV="production"
      npm install -g --prefix $SNAPCRAFT_PART_INSTALL yarn webpack webpack-cli
      yarn install
      yarn build-all

      INSTALL_DIR="$SNAPCRAFT_PART_INSTALL/usr/share/maas/web"
      mkdir -p "$INSTALL_DIR"
      cp -a build "$INSTALL_DIR/static"
    prime:
      - usr/share/maas/web/static

  machine-resources:
    plugin: make
    source: src/machine-resources
    build-snaps:
      - go
    build-packages:
      - go-dep

  tree:
    plugin: dump
    source: snap/local/tree

  stub-initgroups:
    plugin: make
    source: snap/local/stub_initgroups

  snapcraft-preload:
    plugin: cmake
    source: https://github.com/sergiusens/snapcraft-preload
    source-type: git
    build-packages:
      - on amd64:
          - g++-multilib
          - gcc-multilib
    organize:
      usr/local/*: /
    prime:
      - -usr

hooks:
  install:
    command-chain:
      - snap/command-chain/snapcraft-runner
    passthrough:
      environment:
        PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8/dist-packages
    plugs:
      - mount-observe  # to read /proc/*/mounts
      - network  # to connect to the db for running upgrades
  post-refresh:
    command-chain:
      - snap/command-chain/snapcraft-runner
    passthrough:
      environment:
        PYTHONPATH: $SNAP/usr/lib/python3/dist-packages:$SNAP/usr/lib/python3.8/dist-packages
    plugs:
      - mount-observe  # to read /proc/*/mounts
      - network  # to connect to the db for running upgrades

layout:
  /etc/libvirt:
    bind: $SNAP/etc/libvirt
  /usr/sbin/ipmi-config:
    bind-file: $SNAP/usr/sbin/ipmi-config
  /etc/freeipmi:
    bind: $SNAP/etc/freeipmi
  /root:
    bind: $SNAP_DATA/root
