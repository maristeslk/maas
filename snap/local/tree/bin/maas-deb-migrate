#!/bin/bash -e
#
# Copyright 2020 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).
#
#
# Perform migration from a deb setup to the snap.
#

# shellcheck source=snap/local/tree/helpers/_lib
. /snap/agora-maas/current/helpers/_lib


clear_services() {
    local services="dhcpd dhcpd6 http proxy rackd regiond syslog"
    local service
    for service in $services; do
        clean_service "maas-$service.service"
    done
}

clean_service() {
    local service="$1"
    if [ -z "$DPKG_MAINTSCRIPT_PACKAGE" ]; then
        systemctl stop "$service" || true
        systemctl unmask "$service" || true
        find /etc/systemd /var/lib/systemd -type f -name "$service" -delete || true
    else
        deb-systemd-invoke stop "$service" || true
        deb-systemd-helper purge "$service" || true
        deb-systemd-helper unmask "$service" || true
    fi

}

migrate_data() {
    if [ -d /etc/maas ]; then
        cp -a /etc/maas/* "$MAAS_SNAP_DATA"
    fi

    if [ -d /var/lib/maas ]; then
        mv /var/lib/maas "$MAAS_SNAP_COMMON/maas"
        chown -R root:root "$MAAS_SNAP_COMMON/maas"

        mkdir -p "$MAAS_SNAP_DATA/root"
        if [ -d "$MAAS_SNAP_COMMON/maas/.ssh" ]; then
           mv "$MAAS_SNAP_COMMON/maas/.ssh" "$MAAS_SNAP_DATA/root"
        fi
    fi
    if [ -d /var/spool/maas-proxy ]; then
        mkdir -p "$MAAS_SNAP_COMMON/proxy/spool"
        mv /var/spool/maas-proxy/* "$MAAS_SNAP_COMMON/proxy/spool/"
        chown -R snap_daemon:snap_daemon "$MAAS_SNAP_COMMON/proxy/spool"
    fi
}

cleanup_data() {
    rm -rf \
       /etc/bind/maas \
       /etc/maas \
       /etc/chrony/maas.conf \
       /run/lock/maas:* \
       /run/maas/ \
       /var/spool/maas-proxy
}

apply_db_patches() {
    if maas_snap_mode | grep -q "region"; then
        snap_run "maas-region migrate"
    fi

    # patch the value of the default cloud images keyring to point to the one
    # in the snap
    local keyring="/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg"
    cat <<EOF | pg_do psql maasdb
UPDATE maasserver_bootsource
SET keyring_filename = '${MAAS_SNAP}${keyring}'
WHERE keyring_filename = '${keyring}'
EOF
}

configure_supervisord() {
    /snap/bin/maas reconfigure-supervisord
}

maas_snap_mode_set
clear_services
migrate_data
cleanup_data
apply_db_patches
configure_supervisord
